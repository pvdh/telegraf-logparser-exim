# # Stream and parse log file(s).
 [[inputs.logparser]]
#   ## Log files to parse.
#   ## These accept standard unix glob matching rules, but with the addition of
#   ## ** as a "super asterisk". ie:
#   ##   /var/log/**.log     -> recursively find all .log files in /var/log
#   ##   /var/log/*/*.log    -> find all .log files with a parent dir in /var/log
#   ##   /var/log/apache.log -> only tail the apache log file
   files = ["/var/log/exim4/mainlog"]
#
#   ## Read files that currently exist from the beginning. Files that are created
#   ## while telegraf is running (and that match the "files" globs) will always
#   ## be read from the beginning.
#   from_beginning = false
#
#   ## Parse logstash-style "grok" patterns:
#   ##   Telegraf built-in parsing patterns: https://goo.gl/dkay10
 [inputs.logparser.grok]
    patterns = ["%{EXIM_RECEIVED}","%{EXIM_DELIVERY}","%{EXIM_SENT}","%{EXIM_TEMP_REJECT}"]
    measurement = "exim_mainlog"
    custom_patterns = '''
    EXIM_TS_PATTERN %{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}
    #EXIM_TS %{EXIM_TS_PATTERN:ts:ts-"2006-01-02 15:04:05 -0700"}
    EXIM_TS %{EXIM_TS_PATTERN:ts:ts-"2006-01-02 15:04:05"}
    EXIM_MSGID [0-9A-Za-z]{6}-[0-9A-Za-z]{6}-[0-9A-Za-z]{2}
    EXIM_REFERENCE (R=%{EXIM_MSGID})
    EXIM_FLAGS (<=|[-=>*]>|[*]{2}|==)
    EXIM_FLAG %{EXIM_FLAGS:flag:tag}
    EXIM_QT ((\d+y)?(\d+w)?(\d+d)?(\d+h)?(\d+m)?(\d+s)?)
    EXIM_REMOTE_HOST (H=(%{NOTSPACE} )?(\(%{NOTSPACE}\) )?\[[^]]+\])
    #EXIM_USER (U=%{WORD})
    EXIM_USER (U=%{NOTSPACE})
    EXIM_INTERFACE (I=\[%{IP}\](:%{NUMBER}))
    EXIM_PROTOCOL (P=%{NOTSPACE:protocol:tag})
    EXIM_MSG_SIZE (S=%{NUMBER:size:int})
    EXIM_HEADER_ID (id=%{NOTSPACE})
    EXIM_SUBJECT (T=%{QS})
    EXIM_SENDER (F=<%{EMAILADDRESS}>)
    EXIM_RECIPIENT (%{NOTSPACE} <%{NOTSPACE:recipient}>|%{NOTSPACE:recipient})
    EXIM_TLS_CIPHER (X=%{NOTSPACE})
    EXIM_AUTHENTICATOR (A=%{WORD:authenticator:tag}:(%{NOTSPACE:auth_id:tag})?)
    EXIM_REJECTION ((temporarily )?rejected RCPT)
    EXIM_CAPTUREREST (.*)
    EXIM_ROUTER (R=%{NOTSPACE:router:tag})
    EXIM_TRANSPORT (T=%{NOTSPACE:transport:tag})
    EXIM_CONFIRMATION (C=%{QUOTEDSTRING})
    EXIM_DELIVERY_TIME (DT=%{EXIM_QT})
    EXIM_CV (CV=%{NOTSPACE})

    EXIM_RECEIVED %{EXIM_TS} %{EXIM_MSGID:eximid} %{EXIM_FLAG} %{NOTSPACE} (%{EXIM_REFERENCE} )?(%{EXIM_REMOTE_HOST}|%{EXIM_USER}) %{EXIM_PROTOCOL} (%{EXIM_TLS_CIPHER} )?(%{EXIM_CV} )?(%{EXIM_AUTHENTICATOR} )?%{EXIM_MSG_SIZE}( %{EXIM_HEADER_ID})?
    EXIM_SENT %{EXIM_TS} %{EXIM_MSGID:eximid} %{EXIM_FLAG} %{NOTSPACE:recipient} %{EXIM_ROUTER} %{EXIM_TRANSPORT} H=%{NOTSPACE:hostname} \[%{NOTSPACE:ip}\] (%{EXIM_TLS_CIPHER} )?(%{EXIM_CV} )?
    EXIM_DELIVERY %{EXIM_TS} %{EXIM_MSGID:eximid} %{EXIM_FLAG} %{NOTSPACE:localpart} (<%{NOTSPACE:recipient}>|%{NOTSPACE:recipient}) %{EXIM_ROUTER} %{EXIM_TRANSPORT}( %{EXIM_MSG_SIZE})?
    EXIM_TEMP_REJECT %{EXIM_TS} H=%{NOTSPACE:rejectedhostname} (\(%{NOTSPACE}\) )?\[%{NOTSPACE:rejectedip}\] F=<%{NOTSPACE}> %{EXIM_REJECTION:rejection:tag} <%{NOTSPACE}>: %{EXIM_CAPTUREREST:reason:tag}
    '''
#
#     ## Timezone allows you to provide an override for timestamps that
#     ## don't already include an offset
#     ## e.g. 04/06/2016 12:41:45 data one two 5.43Âµs
#     ##
#     ## Default: "" which renders UTC
#     ## Options are as follows:
#     ##   1. Local             -- interpret based on machine localtime
#     ##   2. "Canada/Eastern"  -- Unix TZ values like those found in https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
#     ##   3. UTC               -- or blank/unspecified, will return timestamp in UTC
     timezone = "CET"
#     '''


